# .zshrc is for interactive shells.
# You set options for the interactive shell there with the setopt and unsetopt commands.
#
# Shut up and don't beep on error
setopt no_beep
# Offer to fix spelling fuckups for commands
setopt correct
# Offer to fix spelling fuckups for arguments
setopt correct_all
# Super GLOB
setopt extended_glob
# zmv support
autoload -U zmv


# ===== Customize $fignore =====
fignore=(
  .DS_Store
  $fignore
)

# ==== Customize $FPATH =====
# Prevent duplicates within search paths
typeset -U fpath
# Make user functions available
fpath=(
  $ZDOTDIR/functions
  $fpath
)

# ===== Customize $PATH =====
# U for Unique, like a set;
# (N) == only if exists
typeset -U path   # Prevent duplicates within search paths
path=(
  $CONFIG_HOME/pypoetry/bin(N)
  $HOME/.local/bin
  {{- if eq .chezmoi.os "darwin" }}
  {{ .homebrew.prefix }}/bin(N)
  $HOME/.local/bin/darwin
  {{ else }}
  $HOME/.local/bin/linux(N)
  {{ end -}}
  $PYENV_ROOT/bin(N)
  $POETRY_HOME/bin(N)
  /usr/local/sbin
  "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"(N)
  $path
)

# Source any file with a *.zsh extension. They have additional settings.
for zsh_file ($ZDOTDIR/*.zsh) source $zsh_file

# 1Password CLI
# https://developer.1password.com/docs/cli
if [[ -x $(which op) ]]; then
  eval "$(op completion zsh)"; compdef _op op
fi

# AutoJump
# https://olivierlacan.com/posts/cd-is-wasting-your-time/
{{ if eq .chezmoi.os "linux" }}
[ -f /usr/share/autojump/autojump.sh ] && . /usr/share/autojump/autojump.sh
{{ else }}
[ -f {{ env "HOMEBREW_PREFIX" }}/etc/profile.d/autojump.sh ] && . {{ env "HOMEBREW_PREFIX" }}/etc/profile.d/autojump.sh
{{- end -}}

# Keep this at the end
if [[ -e "$HOME/.cache/iterm2/iterm2_shell_integration.zsh" ]]; then
  source "$HOME/.cache/iterm2/iterm2_shell_integration.zsh" || true
fi

{{ if .pff }}
# Source asdf.
# https://asdf-vm.com/
if [ -f $(brew --prefix asdf)/libexec/asdf.sh ]; then
  source $(brew --prefix asdf)/libexec/asdf.sh
fi
{{ else }}
# PyEnv
if [[ -x $(which pyenv) ]]; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
{{ end }}

# Source zsh-syntax-highlighting extension.
# https://github.com/zsh-users/zsh-syntax-highlighting
if [[ -e "$HOME/.cache/zsh/external/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
  source "$HOME/.cache/zsh/external/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" || true
fi

# Source zsh-autosuggestions extension.
# https://github.com/zsh-users/zsh-autosuggestions
if [[ -e "$HOME/.cache/zsh/external/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  source "$HOME/.cache/zsh/external/zsh-autosuggestions/zsh-autosuggestions.zsh" || true
fi

