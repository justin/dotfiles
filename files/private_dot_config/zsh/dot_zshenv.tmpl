#
# .zshenv is always sourced, whether its an interactive or login shell.
#
# ===== Config Directory =====
#
# This is based on XDG spec, as best as macOS can.
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export XDG_STATE_HOME=$HOME/.local/state
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_DIRS=/usr/local/share:/usr/share
export CONFIG_HOME=$XDG_CONFIG_HOME
{{- if eq .chezmoi.os "darwin" }}
export LIBRARY_HOME=$HOME/Library
{{- end }}

source {{ joinPath .chezmoi.sourceDir "functions/_logging" }}
source {{ joinPath .chezmoi.sourceDir "functions/_utilities" }}

# ===== ZSH Customization =====
# Where our zsh configuration is located.
export ZDOTDIR=$XDG_CONFIG_HOME/zsh

# Save the location of the current completion dump file.
if [ -z "$ZSH_COMPDUMP" ]; then
  # Where to store the autocomplete speedup file(s)
  export ZSH_COMPDUMP=$XDG_CACHE_HOME/zsh/.zcompdump-${SHORT_HOSTNAME:-$(hostname)}
fi
# Prevent zsh from suggesting a large buffer.
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
export ZSH_AUTOSUGGEST_HISTORY_IGNORE="cd *"
export _ZO_DATA_DIR=$XDG_DATA_HOME/zoxide

# ===== Editor of Choice =====
{{- if eq .chezmoi.os "darwin" }}
export EDITOR="code -nw"
{{- else }}
export EDITOR="vim"
{{- end }}

export VISUAL=$EDITOR

# The OS that we are running in.
export OS="$(uname)"

# Silence warning that shows up in macOS 11.0 when launching a new Terminal window:
# `shell_session_history_check:2: scalar parameter SHELL_SESSION_DID_HISTORY_CHECK created globally in function shell_session_history_check`
local SHELL_SESSION_DID_HISTORY_CHECK

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository, but you'll have access to them in your scripts.
if [[ -e $HOME/.localrc ]]; then
  source $HOME/.localrc
fi

# ===== Python =====
export PIP_CONFIG_FILE=$CONFIG_HOME/pip/pip.conf
export POETRY_HOME=$CONFIG_HOME/pypoetry

# Disable auto-add virtualenv name to CLI prompt
export VIRTUAL_ENV_DISABLE_PROMPT=1

# ===== Vim =====
export VIMINIT="set nocp | source ${CONFIG_HOME:-$HOME/.config}/vim/vimrc"

# ===== SSH =====
export SSH_KEY_PATH=$HOME/.ssh/id_rsa

# ===== NPM =====
export NPM_CONFIG_USERCONFIG=$CONFIG_HOME/npm/npmrc

{{- if and (not .codespaces) (not .synology) -}}
# ===== LLM =====
export ANTHROPIC_API_KEY={{ onepasswordRead "op://CompoundBNB/Anthropic API Key - dotfiles/credential" .onepasswordAccount | trim }}
export GEMINI_API_KEY={{ onepasswordRead "op://CompoundBNB/Gemini API Key - dotfiles/credential" .onepasswordAccount | trim }}
export OPENAI_API_KEY={{ onepasswordRead "op://CompoundBNB/OpenAI API Key - dotfiles/credential" .onepasswordAccount | trim }}
{{ end }}

{{- if eq .chezmoi.hostname "m1server" }}
export COLIMA_HOME=$CONFIG_HOME/colima
{{ end }}
