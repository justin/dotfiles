[user]
  name = {{ .name }}
  useConfigOnly = true

[include]
  path =  ~/.config/git/gitconfig.personal

[github]
  user = {{ .github_username }}

{{ if not .ephemeral -}}
# Always use SSH authentication, even if the remote URL specifies https:// or git://
# via: http://engineering.pivotal.io/post/git-push-instead-of/
[url "git@github.com:"]
  pushInsteadOf = https://github.com/
  pushInsteadOf = git://github.com/
{{- end }}

[init]
  defaultBranch = main

[log]
  date = human

[push]
  autoSetupRemote = true

[pull]
  rebase = true

[column]
  ui = auto # Enable column layout for various commands such as `git branch`

[color]
  ui = auto
  branch = auto
  diff = auto
  status = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  editor = vim
  quotepath = false
  trustctime = false
{{- if lookPath "delta" }}
  pager = delta

[delta]
  navigate = true  # use n and N to move between diff sections
  dark = true      # or light = true, or omit for auto-detection

[interactive]
  diffFilter = delta --color-only

[merge]
  conflictStyle = zdiff3
{{- end }}

{{ if eq .osid "darwin" }}
[credential]
	helper = /usr/local/bin/git-credential-manager
{{ end }}

[credential "https://github.com"]
  username = {{ .github_username}}

{{ if eq .osid "darwin" -}}
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[diff "localizablestrings"]
  textconv = iconv -t utf-8
  binary = false

[diff]
  tool = Kaleidoscope
  colorMoved = zebra

[difftool]
  prompt = false

[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true

[mergetool]
  prompt = false

[merge]
  tool = Kaleidoscope
  ff = only
{{- end }}

[rebase]
  autosquash = true

{{- if and (not .ephemeral) (not .synology) }}
[gpg]
  format = ssh

[gpg "ssh"]
{{- if eq .chezmoi.os "darwin" }}
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
{{- else if eq .chezmoi.os "linux" }}
  defaultKeyCommand = ssh-add -L
{{- end }}
  allowedSignersFile = {{ .chezmoi.homeDir }}/.ssh/allowed_signers

[tag]
  gpgsign = true

[commit]
  gpgsign = true

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
{{- end }}

[alias]
  # Make it easy to filter a log command to only show my commits
  me = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)' --abbrev-commit --author=\"Justin Williams\""
  # A cleaner version of 'git log'
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
  # Show a log of my commits over the last week.
  report = me --since='2 sundays ago' --until='1 sunday ago' --no-merges
  # Use force-with-lease for force pushing.
  pf = push --force-with-lease

{{- if eq .chezmoi.os "darwin" }}
  builds = "!git log --format='%H' --grep='Build increment:' -2 | awk 'NR > 1 { printf(\"...\") } { printf(\"%s%s\", $1, $2) }'"
  # Show commit messages since last build increment.
  releasenotes = "!git log --format='- %s' $(git builds) --reverse --no-merges"
{{- end }}
