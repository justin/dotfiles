" Vim configuration file
" ==================================================
" = set the option to a specific value (duh)
" ^= prepends a value to the option.
" += appends a value to the option.
" -= remove a value from the option.

" XDG Base Directory support
" Finally in vim as of 9.1.37 - https://vimhelp.org/starting.txt.html#xdg-base-dir
if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif
if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif
if empty($XDG_STATE_HOME)  | let $XDG_STATE_HOME  = $HOME."/.local/state" | endif

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after
if isdirectory('/opt/homebrew/opt/fzf')
    set runtimepath+=/opt/homebrew/opt/fzf
elseif isdirectory('/usr/bin/fzf')
  set runtimepath+=/usr/bin/fzf
endif
set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p', 0700) " Set directory for swap files to XDG cache location
set backupdir=$XDG_STATE_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700) " Set directory for backup files to XDG cache location
set viewdir=$XDG_STATE_HOME/vim/view     | call mkdir(&viewdir,   'p', 0700) " Set directory for view files to XDG state location
set undodir=$XDG_STATE_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700) " Set directory for undo files to XDG cache location
set viminfofile=$XDG_STATE_HOME/vim/viminfofile                              " Set viminfo file location to XDG state directory

let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p', 0700)
call mkdir($XDG_STATE_HOME."/vim", 'p', 0700)

set fileformats=unix,dos,mac                             " Use Unix as the standard file type
set colorcolumn=100                                      " Highlight column 100
set numberwidth=4                                        " Set width of line numbers to 4 characters.
set shiftwidth=4                                         " Set indentation width to 4 spaces.
set tabstop=4                                            " Set tab width to 4 spaces.
set expandtab                                            " Use space characters instead of tabs.
set autoindent                                           " Enable automatic indentation.
set smartindent                                          " Enable smart indentation.
set number                                               " Show line numbers
set ignorecase                                           " Ignore case in search patterns
set smartcase                                            " Override ignorecase if search pattern has uppercase
set hlsearch                                             " Highlight search results
set incsearch                                            " Show search matches as you type
set history=1000                                         " Set command history size to 1000. Default is 20.
set scrolloff=10                                         " Keep 10 lines visible above and below the cursor.

set splitbelow                                           " Open horizontal splits below the current window
set splitright                                           " Open vertical splits to the right of the current window
set undofile                                             " Enable persistent undo
set mouse=a                                              " Enable mouse support in all modes

" General UI cleanup when using a custom statusline
set noruler                                              " Disable the default ruler in the status line
set noshowcmd                                            " Disable showing (partial) command in the last line of the screen
set noshowmode                                           " Disable showing the current mode in the last line of the screen
set conceallevel=1                                       " Set conceal level to 1 (allows hiding of some text based on syntax)
set shortmess+=F                                         " Don't give the file info when editing a file, like "new file" or "file x of y"

packadd chezmoi.vim
filetype on                                              " Enable type file detection. Vim will be able to try to detect the type of file is use.
filetype plugin on                                       " Enable plugins and load plugin for the detected file type.
filetype indent on                                       " Load an indent file for the detected file type.
syntax on                                                " Enable syntax highlighting

if has('wildmenu')
  set wildmenu                                           " Enable auto completion menu after pressing TAB.
  set wildmode=list:longest                              " Make wildmenu behave like similar to Bash completion.
  set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx  " Wildmenu will ignore files with these extensions.
endif

inoremap jj <Esc>                                        " Map 'jj' in insert mode to escape to normal mode
inoremap jk <Esc>                                        " Map 'jk' in insert mode to escape to normal mode
let mapleader = "\<Space>"                               " Set leader key to spacebar.

colorscheme jww                                          " Use 'jww' colorscheme (must be installed)

nnoremap <leader>\| :vsplit<cr>                          " Normal Mode: Vertical split(expr)
nnoremap <leader>- :split<cr>                            " Normal Mode: Horizontal split(expr)
nnoremap <leader>n :set hlsearch!<CR>                    " Normal Mode: Toggle search highlighting

nnoremap <leader>l :bnext<CR>                            " Normal Mode: Go to next buffer
nnoremap <leader>h :bprevious<CR>                        " Normal Mode: Go to previous buffer

" Disable arrow keys in normal, insert and visual modes
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>

" FZF keybindings
" Normal Mode: Open FZF file finder (fuzzy search files in current directory)
nnoremap <silent> <Leader><Leader> :Files<CR>
" Normal Mode: Alternative binding for FZF file finder (clears command line first)
nnoremap <silent> <leader>t        :<C-u>Files<CR>
" Normal Mode: Open FZF buffer list (switch between open buffers)
nnoremap <silent> <Leader>e        :Buffers<CR>
" Normal Mode: Search lines across all open buffers with FZF
nnoremap <silent> <Leader>g        :Lines<CR>
" Normal Mode: Search lines in current Buffer only with FZF
nnoremap <silent> <leader>f        :BLines<CR>
" Normal Mode: Browse command history with FZF
nnoremap <silent> <Leader>H        :History:<CR>
" Normal Mode: Browse search history with FZF
nnoremap <silent> <Leader>/        :History/<CR>
" Normal Mode: Use ripgrep (rg) to search file contents with FZF (! prevents auto-opening first result)
nnoremap <silent> <Leader>a        :Rg!<CR>

" Subtle gray
highlight ColorColumn ctermbg=238 guibg=#474747

" Source statusline from separate file on runtimepath
runtime! statusline.vim
