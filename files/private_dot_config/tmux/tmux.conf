# Allow applications to send escape sequences directly to the terminal
# This enables features like changing cursor shape, colors, and other terminal capabilities
set-option -g allow-passthrough on

# Enable mouse support for scrolling, pane selection, and window switching
set-option -g mouse on

# Increase scrollback buffer size for each pane
set -g history-limit 102400

# Start window numbering at 1 instead of 0
set -g base-index 1

# Start pane numbering at 1 instead of 0
setw -g pane-base-index 1

# Automatically renumber windows after closing one
set -g renumber-windows on

# Use emacs keybindings in the status line
set-option -g status-keys emacs

# Use vim keybindings in copy mode for navigation and selection
setw -g mode-keys vi

# Reduce delay after pressing ESC (useful for vim users)
set -g escape-time 10

# Unbind the default prefix key (Ctrl-b)
unbind C-b

# Set prefix key to Ctrl-a
set -g prefix C-a

# Send prefix key to the current pane
bind C-a send-prefix

# Reload tmux config and display a message
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"

# Detect if the current pane is running vim, nvim, or view
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Smart pane switching with Ctrl-h/j/k/l: send keys to vim if active, otherwise switch pane
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Get tmux version for compatibility with Ctrl-\
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# Smart Ctrl-\ binding: send to vim if active, otherwise switch to last pane
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Enable pane navigation in copy-mode-vi with Ctrl-h/j/k/l and Ctrl-\
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Show tmux window titles as iTerm2 tab/window titles
# via https://gitlab.com/gnachman/iterm2/-/wikis/tmux-Integration-Best-Practices#i-want-to-see-tmux-window-titles-as-tabwindow-titles-in-iterm2
set-option -g set-titles on
set-option -g set-titles-string '#T'

# set-option -g status-justify left
# set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #S #[bg=colour236] '
# set-option -g status-left-length 16
# set-option -g status-bg colour237
# set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] %a %R #[bg=colour236]#[fg=colour3] #[bg=colour237] #[bg=colour72] #[]'
# set-option -g status-interval 60

# set-option -g pane-active-border-style fg=colour246
# set-option -g pane-border-style fg=colour238

# set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
# set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '
