#!/usr/bin/env just --justfile

set shell := ["zsh", "-cu"]

vscode_bundle := "com.microsoft.VSCode"

default:
  just --list

[macos]
fix-touchid: # After a system update the Touch ID support for sudo is broken. This fixes it.
  @sudo `which sudo-touchid`

[macos]
fix-uti: # Periodically the UTI mappings get broken. This fixes it.
  @echo "Fixing UTI mappings"

  duti -s {{vscode_bundle}} md all
  duti -s {{vscode_bundle}} json all
  duti -s {{vscode_bundle}} txt all
  duti -s {{vscode_bundle}} js all
  duti -s {{vscode_bundle}} ts all
  duti -s {{vscode_bundle}} css all
  duti -s {{vscode_bundle}} yml all
  duti -s {{vscode_bundle}} cfg all
  duti -s {{vscode_bundle}} sh all
  duti -s {{vscode_bundle}} rb all
  duti -s {{vscode_bundle}} py all
  duti -s com.colliderli.iina mp4 all
  duti -s com.colliderli.iina mkv all
  duti -s com.colliderli.iina mov all
  duti -s com.colliderli.iina avi all
  duti -s com.colliderli.iina m4v all
  duti $XDG_CONFIG_HOME/macos/duti-uti-mappings.plist

[macos]
install-sdk platform='ios': # Install an Xcode SDK for a given platform: ios, macos, watchos, tvos
 @echo "Installing SDK {{platform}}"
 xcodebuild -downloadPlatform {{platform}}

[macos]
[private]
create-sim platform='iphone' device_name='': # Create a new iOS or iPadOS simulator.
  @echo "Creating simulator for {{platform}}"
  sim create_device {{platform}} {{quote(device_name)}}

[macos]
create-ipad device_name='': # Create a new iOS simulator.
  sim create_device iphone {{quote(device_name)}}

[macos]
create-iphone device_name='': # Create a new iPadOS simulator.
  sim create_device ipad {{quote(device_name)}}

[macos]
reboot: # Reboot the system.
  @echo "Rebooting the system."
  sudo shutdown -r now

[linux]
reboot: # Reboot the system.
  @echo "Rebooting the system."
  sudo systemctl reboot

alias up := update-all

[macos]
update-all: # Update all installed apps
  @echo "ðŸš€ Updating Homebrew."
  just update-homebrew
  gh extension upgrade --all
  just update-mas
  @echo "ðŸš€ Updating npm packages"
  just npm-upgrade
  @echo "ðŸš€ Updating python packages"
  just py-upgrade
  just update-mcp

[linux]
update-all: # Update all installed apps
  just update-apt
  just update-snap
  @echo "ðŸš€ Updating npm packages"
  just npm-upgrade
  @echo "ðŸš€ Updating python packages"
  just py-upgrade
  just update-mcp

[macos]
[private]
update-mas: # Update Mac App Store apps
  @echo "ðŸš€ Updating Mac App Store apps."
  mas upgrade

[macos]
update-homebrew: # Update Homebrew installed packages.
  brew update
  brew outdated
  brew upgrade
  brew cleanup -s

[linux]
update-apt: # Update APT packages.
  @echo "ðŸš€ Updating APT packages."
  sudo apt update
  sudo apt upgrade -y
  sudo apt autoremove -y

[linux]
update-snap: # Update Snap packages.
  @echo "ðŸš€ Updating Snap packages."
  sudo snap refresh

[macos]
npm-upgrade: # Update all globally installed npm packages (no sudo on macOS)
  #!/usr/bin/env zsh
  set -euo pipefail
  for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2)
  do
    npm -g install "$package"
  done
  xargs -a $XDG_CONFIG_HOME/npm/global_npm_packages.txt -n1 npm install -g;

[linux]
npm-upgrade: # Update all globally installed npm packages (use sudo on Linux)
  #!/usr/bin/env zsh
  set -euo pipefail
  for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2)
  do
    sudo npm -g install "$package"
  done
  xargs -a $XDG_CONFIG_HOME/npm/global_npm_packages.txt -n1 sudo npm install -g;

py-upgrade: # Update all globally installed python packages
  #!/usr/bin/env zsh
  set -euo pipefail
  xargs -n 1 pipx install --include-deps < $XDG_CONFIG_HOME/pip/global_pip_packages.txt 1>/dev/null

update-mcp: # Extract MCP server configurations and create a new servers configuration file
  #!/usr/bin/env zsh
  set -euo pipefail
  if [[ ! -f "$XDG_CONFIG_HOME/mcp/mcp.json" ]]; then
    echo "Error: $XDG_CONFIG_HOME/mcp/mcp.json not found"
    exit 1
  fi

  if [ $(uname) = "Darwin" ]; then
      jq '{servers: .mcpServers}' "$XDG_CONFIG_HOME/mcp/mcp.json" > "$XDG_CONFIG_HOME/github-copilot/xcode/mcp.json"
  fi
