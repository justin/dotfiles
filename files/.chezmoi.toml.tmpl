{{- /* Checks if running interactively, which is not the case for GitHub Codespaces */ -}}
{{- $interactive:= stdinIsATTY -}}
{{- /* detect GitHub codespaces, VSCode remote containers or Docker containers */ -}}
{{- $codespaces:= env "CODESPACES" | not | not -}}
{{- $ci := env "CI" | not | not -}}

{{- /* detect my Synology NAS */ -}}
{{- $synology:= false }}
{{- if eq .chezmoi.hostname "nas" -}}
{{- $synology = true -}}
{{- end -}}

{{- $email := "justin@users.noreply.github.com" }}
{{- if and (eq .chezmoi.os "darwin") ($interactive) -}}
{{- $email = promptStringOnce . "email" "What is your email address" $email -}}
{{- end -}}

{{- if stdinIsATTY -}}
{{- writeToStdout "ðŸ’¡ Tip: you can reconfigure with `chezmoi init --data=false`.\n" -}}
{{- end -}}

[data]
  name = "Justin Williams"
  email = {{ $email | quote }}
  username = {{ if eq .chezmoi.os "darwin" }} "justinwilliams" {{ else }} "justin" {{ end }}
  github_username = "justin"
  url = "https://justinw.me"
  codespaces = {{ $codespaces }}
  synology = {{ $synology }}
  ci = {{ $ci }}
  homelab = {{ if or (eq .chezmoi.os "linux") (eq .chezmoi.hostname "m1server") }}true{{ else }}false{{ end }}

[data.homebrew]
  prefix = {{ if eq .chezmoi.os "darwin" -}}"/opt/homebrew"{{ else }}"/home/linuxbrew/.linuxbrew"{{- end }}

{{ if $synology }}
tempDir = "/var/services/tmp"
scriptTempDir = "/var/services/tmp"

[edit]
  hardlink = false
  command = "/usr/local/bin/vim9"

[diff]
  command = "/usr/local/bin/vimdiff"
  args = [
    "-d",
    {{ printf "%q" "{{ .Destination }}" }},
    {{ printf "%q" "{{ .Target }}" }}
  ]

[merge]
  command = "/usr/local/bin/vim9"
  args = [
    "-d",
    {{ printf "%q" "{{ .Destination }}" }},
    {{ printf "%q" "{{ .Source }}" }},
    {{ printf "%q" "{{ .Target }}" }},
  ]
{{ end }}

sourceDir = {{ .chezmoi.sourceDir | quote }}

{{ if and (not $synology) (not $codespaces) (not $ci)  }}
[hooks.read-source-state.pre]
  command = ".local/share/chezmoi/.install-password-manager.sh"
{{ end -}}

{{ if or (eq .chezmoi.hostname "homelab" "m1server") }}
[onepassword]
  mode = "service"

[scriptEnv]
  OP_SERVICE_ACCOUNT_TOKEN = "{{ env "OP_SERVICE_ACCOUNT_TOKEN" | default "" }}"
{{ end }}
